<?php

/**
 * @file
 * Primary module hooks for MachineVision module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\node\NodeForm;
use Drupal\views\ViewExecutable;

/**
 * Implements hook_form_alter().
 *
 * Custom overrides of admin theme node forms.
 *
 * @param $form
 * @param FormStateInterface $form_state
 * @param $form_id
 */
function machinevision_setup_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form_state->getFormObject() instanceof NodeForm) {
    $form['#attached']['library'][] = 'machinevision_setup/forms';

    foreach ($form as $name => $FormElement) {
      if (!is_array($FormElement)) {
        continue;
      }

      if (isFormElementLarge($FormElement)) {
        addMultiColumnToForm($form, $name);
      }

    }
  }
}

function addMultiColumnToForm(&$form, $name) {
  $form[$name]['#attributes']['class'][] = 'form-multi-column';
}

function isFormElementLarge(array $formElement): bool
{
  if (!isset($formElement['widget'])) {
    return false;
  }

  if (!isset($formElement['widget']['#options'])) {
    return false;
  }

  return !(strripos($formElement['widget']['#field_name'], 'field_') === false) && (count($formElement['widget']['#options']) >= 15);
}

/**
 * Implements hook_views_pre_view().
 */
function machinevision_setup_views_pre_view(ViewExecutable $view, $display_id, array &$args) {

  if ($view->id() !== 'taxonomy_term') {
    return;
  }

  $term = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($args[0]);

  if (!isset($term)) {
    return;
  }

  $vocabulariesUsedByCharacters = [
    'age',
    'gender',
    'race',
    'sexuality',
    'species',
  ];
  $bundle = $term->bundle();
  if (in_array($term->bundle(), $vocabulariesUsedByCharacters, true)) {
    $view->setDisplay('page_2');
  }
}
